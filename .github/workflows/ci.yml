name: ci

on:
  pull_request:
  push:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write

jobs:
  build-test-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install deps
        run: pip install -r requirements.txt

      - name: Run tests
        run: PYTHONPATH=. pytest -q --maxfail=1

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Export SONAR_PROJECT_KEY from properties
        run: |
          KEY=$(grep -E '^sonar\.projectKey=' sonar-project.properties | sed 's/sonar\.projectKey=//')
          echo "Detected sonar.projectKey=$KEY"
          echo "SONAR_PROJECT_KEY=$KEY" >> $GITHUB_ENV



      - name: Fetch Sonar issues (API)
        env:
          SONAR_HOST_URL: https://sonarcloud.io
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: akRAMd9_SonaRefactor-Bot   
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          python scripts/fetch_sonar_issues.py
          echo "---- issues.json head ----"
          python - <<'PY'
          import json, os
          p = "issues.json"
          print("exists:", os.path.exists(p), "size:", os.path.getsize(p) if os.path.exists(p) else 0)
          if os.path.exists(p):
              print(json.dumps(json.load(open(p))[:3], indent=2))
          PY

      - name: AI Reviewer (Gemini, comment-only)
        env:
          GEMINI_API_KEY: ${{ secrets.LLM_API_KEY }}  
          LLM_MODEL: gemini-2.5-flash                    
        run: python scripts/llm_reviewer.py

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: sonar-issues
          path: issues.json

      - name: Post summary to PR
        run: python scripts/pr_commenter.py || true
